//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class logic :  Bright.Config.BeanBase 
{
    public logic(JSONNode _json) 
    {
        { if(!_json["storyID"].IsNumber) { throw new SerializationException(); }  StoryID = _json["storyID"]; }
        { if(!_json["nextStoryIsA"].IsNumber) { throw new SerializationException(); }  NextStoryIsA = _json["nextStoryIsA"]; }
        { if(!_json["nextStoryIsB"].IsNumber) { throw new SerializationException(); }  NextStoryIsB = _json["nextStoryIsB"]; }
        { if(!_json["nextStoryIsC"].IsNumber) { throw new SerializationException(); }  NextStoryIsC = _json["nextStoryIsC"]; }
        { if(!_json["nextStoryIsD"].IsNumber) { throw new SerializationException(); }  NextStoryIsD = _json["nextStoryIsD"]; }
        PostInit();
    }

    public logic(int storyID, int nextStoryIsA, int nextStoryIsB, int nextStoryIsC, int nextStoryIsD ) 
    {
        this.StoryID = storyID;
        this.NextStoryIsA = nextStoryIsA;
        this.NextStoryIsB = nextStoryIsB;
        this.NextStoryIsC = nextStoryIsC;
        this.NextStoryIsD = nextStoryIsD;
        PostInit();
    }

    public static logic Deserializelogic(JSONNode _json)
    {
        return new logic(_json);
    }

    /// <summary>
    /// 文本段标记
    /// </summary>
    public int StoryID { get; private set; }
    /// <summary>
    /// 评分A时跳转
    /// </summary>
    public int NextStoryIsA { get; private set; }
    /// <summary>
    /// 评分B时跳转
    /// </summary>
    public int NextStoryIsB { get; private set; }
    /// <summary>
    /// 评分C时跳转
    /// </summary>
    public int NextStoryIsC { get; private set; }
    /// <summary>
    /// 评分D时跳转
    /// </summary>
    public int NextStoryIsD { get; private set; }

    public const int __ID__ = 103149406;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "StoryID:" + StoryID + ","
        + "NextStoryIsA:" + NextStoryIsA + ","
        + "NextStoryIsB:" + NextStoryIsB + ","
        + "NextStoryIsC:" + NextStoryIsC + ","
        + "NextStoryIsD:" + NextStoryIsD + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
