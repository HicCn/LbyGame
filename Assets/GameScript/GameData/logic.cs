//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class logic :  Bright.Config.BeanBase 
{
    public logic(JSONNode _json) 
    {
        { if(!_json["storyID"].IsNumber) { throw new SerializationException(); }  StoryID = _json["storyID"]; }
        { var __json0 = _json["nextStory"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; NextStory = new int[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  NextStory[__index0++] = __v0; }   }
        PostInit();
    }

    public logic(int storyID, int[] nextStory ) 
    {
        this.StoryID = storyID;
        this.NextStory = nextStory;
        PostInit();
    }

    public static logic Deserializelogic(JSONNode _json)
    {
        return new logic(_json);
    }

    /// <summary>
    /// 文本段标记
    /// </summary>
    public int StoryID { get; private set; }
    /// <summary>
    /// 评分A时跳转
    /// </summary>
    public int[] NextStory { get; private set; }

    public const int __ID__ = 103149406;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "StoryID:" + StoryID + ","
        + "NextStory:" + Bright.Common.StringUtil.CollectionToString(NextStory) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
