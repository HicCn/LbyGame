//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.song
{ 

public sealed partial class test :  Bright.Config.BeanBase 
{
    public test(JSONNode _json) 
    {
        { if(!_json["ID"].IsNumber) { throw new SerializationException(); }  ID = _json["ID"]; }
        { if(!_json["generationDowmTime"].IsNumber) { throw new SerializationException(); }  GenerationDowmTime = _json["generationDowmTime"]; }
        { if(!_json["generationType"].IsNumber) { throw new SerializationException(); }  GenerationType = _json["generationType"]; }
        { if(!_json["isEnd"].IsBoolean) { throw new SerializationException(); }  IsEnd = _json["isEnd"]; }
        { if(!_json["isButton"].IsString) { throw new SerializationException(); }  IsButton = _json["isButton"]; }
        PostInit();
    }

    public test(int ID, long generationDowmTime, int generationType, bool isEnd, string isButton ) 
    {
        this.ID = ID;
        this.GenerationDowmTime = generationDowmTime;
        this.GenerationType = generationType;
        this.IsEnd = isEnd;
        this.IsButton = isButton;
        PostInit();
    }

    public static test Deserializetest(JSONNode _json)
    {
        return new song.test(_json);
    }

    /// <summary>
    /// 流水号
    /// </summary>
    public int ID { get; private set; }
    /// <summary>
    /// 判断按下时间（单位毫秒，30帧的情况下33毫秒一帧
    /// </summary>
    public long GenerationDowmTime { get; private set; }
    /// <summary>
    /// 1表示点按，数字表示长按的长度
    /// </summary>
    public int GenerationType { get; private set; }
    /// <summary>
    /// 段落标记
    /// </summary>
    public bool IsEnd { get; private set; }
    /// <summary>
    /// 对应的按键
    /// </summary>
    public string IsButton { get; private set; }

    public const int __ID__ = 315583947;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "GenerationDowmTime:" + GenerationDowmTime + ","
        + "GenerationType:" + GenerationType + ","
        + "IsEnd:" + IsEnd + ","
        + "IsButton:" + IsButton + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
