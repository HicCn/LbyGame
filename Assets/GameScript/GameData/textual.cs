//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class textual :  Bright.Config.BeanBase 
{
    public textual(JSONNode _json) 
    {
        { if(!_json["storyID"].IsNumber) { throw new SerializationException(); }  StoryID = _json["storyID"]; }
        { if(!_json["storyChapter"].IsString) { throw new SerializationException(); }  StoryChapter = _json["storyChapter"]; }
        { if(!_json["playInput"].IsString) { throw new SerializationException(); }  PlayInput = _json["playInput"]; }
        PostInit();
    }

    public textual(int storyID, string storyChapter, string playInput ) 
    {
        this.StoryID = storyID;
        this.StoryChapter = storyChapter;
        this.PlayInput = playInput;
        PostInit();
    }

    public static textual Deserializetextual(JSONNode _json)
    {
        return new textual(_json);
    }

    /// <summary>
    /// 故事序号
    /// </summary>
    public int StoryID { get; private set; }
    /// <summary>
    /// 故事内容
    /// </summary>
    public string StoryChapter { get; private set; }
    /// <summary>
    /// 大写WASD代表点按已经需要按下的按键，B表示长按开始，-表示长按中，b表示长按结束
    /// </summary>
    public string PlayInput { get; private set; }

    public const int __ID__ = -1417817325;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "StoryID:" + StoryID + ","
        + "StoryChapter:" + StoryChapter + ","
        + "PlayInput:" + PlayInput + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
